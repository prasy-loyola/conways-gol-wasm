
import { log, get_str_as_wasmstr } from "./common.js"
import { draw_rect } from "./canvas.js"
var wasm = null;
let canvas = document.getElementById("canvas");
let ctx = canvas.getContext("2d");

var initial_state = `
! 2-engine Cordership
! Aidan F. Pierce
! The smallest known Cordership.
! https://conwaylife.com/wiki/2-engine_Cordership
...................OO....................
...................OOOO..................
...................O.OO..................
.........................................
....................O....................
...................OO....................
...................OOO...................
.....................O...................
.................................OO......
.................................OO......
.........................................
.........................................
.........................................
.........................................
.........................................
.........................................
....................................O....
...................................OO....
..................................O...O..
...................................OO..O.
........................................O
.....................................O.O.
......................................O..
......................................O..
......................................OO.
......................................OO.
.........................................
.........................................
.............O..........O................
............OOOOO.....O.OO...........O...
...........O..........O...O.........O....
............OO........OOO.O.........OO...
.............OO.........OO............O..
OO.............O.....................OOO.
OO...................................OOO.
.........................................
.........................................
.........................................
.........................................
.........................................
.........................................
........OO...............................
........OO...........OO..................
...................OO..O.................
........................O...O............
..................O.....O...O............
...................O..OO...O.O...........
....................OOO.....O............
............................O............
`;

(async () => {
  let response = await fetch('wasm_game.wasm');
  let bytes = await response.arrayBuffer();
  let { instance } = await WebAssembly.instantiate(bytes, {
    "env": {
      "alert": (ptr, len) => log(instance.exports.memory.buffer, ptr, len),
      "fillRect": (x, y, w, h, r, g, b, a) => draw_rect(ctx, x, y, w, h, r, g, b, a)
    }

  });

  wasm = instance;
  console.log(wasm.exports.memory);
  try {
    let game = instance.exports.init(...get_str_as_wasmstr(instance,initial_state), 10 ,10 );
    console.log(game);
    window.requestAnimationFrame(() =>
      instance.exports.render(game)
    );
    setInterval(() => {
      window.requestAnimationFrame(
        () => {

          instance.exports.update(game);
          instance.exports.render(game);
        }


      );
    }, 80);
  } catch (e) {
    console.log(e)
  }
})();